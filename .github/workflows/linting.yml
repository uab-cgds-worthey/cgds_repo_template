name: Linting- Markdown,Shell

on:
  push:
  workflow_dispatch:

env:
  PYLINT_CONFIG: .pylintrc

jobs:
  markdown-linting:
    name: Markdown linting
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: markdownlint-cli
        uses: nosborn/github-action-markdown-cli@v3.3.0
        with:
          files: .
          config_file: ".markdownlint.json"
          dot: true
          ignore_files: ".git*/"


  markdown-check-links:
    name: Markdown - checking links
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          config-file: ".markdownlint.json"

  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master

  python-ci:
    name: Python linting
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    defaults:
      run:
        working-directory: .

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with Pylint
      run: |
        # Stop the build if there are Python linting errors
        pylint --rcfile $PYLINT_CONFIG src tests
    - name: Formatting with Pylint
      run: |
        yapf -r . --diff --style $YAPF_CONFIG
    - name: Unit test with pytest
      run: |
        pytest --cov=src --cov-fail-under=80 --cov-branch --cov-report=term tests/unit/
    - name: Integration test with pytest
      run: |
        pytest -s tests/integration
